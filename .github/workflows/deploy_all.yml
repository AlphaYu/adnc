name: deploy_all

on: workflow_dispatch

env:
  REPOSITORY: "adnc"
  RUNNER_DEMO_SOURCE_ROOT: /home/runner/work/adnc/adnc/src/ServerApi/Demo
  PUBLISH_PATH: bin/Release/net6.0/linux-x64/publish
  USR_IMAGE_NAME: adnc-demo-usr
  USR_PROJECT_PATH: Usr/Adnc.Demo.Usr.Api
  USR_START_FILE: "Adnc.Demo.Usr.Api.dll"

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x
        
    - name: Publish Solution
      run: dotnet publish ${RUNNER_DEMO_SOURCE_ROOT}/Adnc.Demo.sln --configuration Release  --runtime linux-x64 --self-contained false
      
    - name: Deploy-USR
      run: |
        IMAGE_NAME=$USR_IMAGE_NAME
        PROJECT_PATH=$USR_PROJECT_PATH

        cd ${RUNNER_DEMO_SOURCE_ROOT}/${PROJECT_PATH}/${PUBLISH_PATH}

        echo "create dockerfile"
        touch Dockerfile
        echo '' > Dockerfile
        pwd
        echo "FROM mcr.microsoft.com/dotnet/aspnet:6.0 AS base" >> Dockerfile
        echo "WORKDIR /app" >> Dockerfile
        echo "COPY . /app" >> Dockerfile
        echo "ENTRYPOINT [ \"dotnet\",\"${USR_START_FILE}\" ]" >> Dockerfile

        echo "build image"
        docker build . --file Dockerfile --tag $IMAGE_NAME

        echo "Login to registry"
        echo "${{ secrets.DOCKER_API_KEY }}" | docker login -u ${REPOSITORY} --password-stdin
        
        echo "Push"
        IMAGE_ID=${REPOSITORY}/${IMAGE_NAME}
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        VERSION=$(date +%s)
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:latest
        docker push $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:latest
