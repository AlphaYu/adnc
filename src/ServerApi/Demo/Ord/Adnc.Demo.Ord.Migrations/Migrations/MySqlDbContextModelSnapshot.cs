// <auto-generated />
using System;
using Adnc.Infra.Repository.EfCore.MySql;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Adnc.Demo.Ord.Migrations.Migrations
{
    [DbContext(typeof(MySqlDbContext))]
    partial class MySqlDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8mb4 ");

            modelBuilder.Entity("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("amount")
                        .HasComment("订单金额");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("createby")
                        .HasComment("");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint")
                        .HasColumnName("customerid")
                        .HasComment("客户Id");

                    b.Property<string>("Remark")
                        .HasMaxLength(64)
                        .HasColumnType("varchar(64)")
                        .HasColumnName("remark")
                        .HasComment("备注");

                    b.Property<DateTime>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("timestamp(6)")
                        .HasColumnName("rowversion")
                        .HasComment("");

                    b.HasKey("Id")
                        .HasName("pk_order");

                    b.ToTable("order", (string)null);

                    b.HasComment("订单");
                });

            modelBuilder.Entity("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("");

                    b.Property<int>("Count")
                        .HasColumnType("int")
                        .HasColumnName("count")
                        .HasComment("数量");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint")
                        .HasColumnName("orderid")
                        .HasComment("订单Id");

                    b.HasKey("Id")
                        .HasName("pk_orderitem");

                    b.HasIndex("OrderId")
                        .HasDatabaseName("ix_orderitem_orderid");

                    b.ToTable("orderitem", (string)null);

                    b.HasComment("订单条目");
                });

            modelBuilder.Entity("Adnc.Shared.Repository.EfEntities.EventTracker", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .HasColumnOrder(1)
                        .HasComment("");

                    b.Property<long>("CreateBy")
                        .HasColumnType("bigint")
                        .HasColumnName("createby")
                        .HasComment("创建人");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("createtime")
                        .HasComment("创建时间/注册时间");

                    b.Property<long>("EventId")
                        .HasColumnType("bigint")
                        .HasColumnName("eventid")
                        .HasComment("");

                    b.Property<string>("TrackerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("trackername")
                        .HasComment("");

                    b.HasKey("Id")
                        .HasName("pk_eventtracker");

                    b.HasIndex(new[] { "EventId", "TrackerName" }, "uk_eventid_trackername")
                        .IsUnique()
                        .HasDatabaseName("ix_eventtracker_eventid_trackername");

                    b.ToTable("eventtracker", (string)null);

                    b.HasComment("事件跟踪/处理信息");
                });

            modelBuilder.Entity("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.OwnsOne("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.OrderReceiver", "Receiver", b1 =>
                        {
                            b1.Property<long>("OrderId")
                                .HasColumnType("bigint")
                                .HasColumnName("id");

                            b1.Property<string>("Address")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnName("receiveraddress");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(16)
                                .HasColumnType("varchar(16)")
                                .HasColumnName("receivername");

                            b1.Property<string>("Phone")
                                .IsRequired()
                                .HasMaxLength(11)
                                .HasColumnType("varchar(11)")
                                .HasColumnName("receiverphone");

                            b1.HasKey("OrderId");

                            b1.ToTable("order");

                            b1.WithOwner()
                                .HasForeignKey("OrderId")
                                .HasConstraintName("fk_order_order_id");
                        });

                    b.OwnsOne("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.OrderStatus", "Status", b1 =>
                        {
                            b1.Property<long>("OrderId")
                                .HasColumnType("bigint")
                                .HasColumnName("id");

                            b1.Property<string>("ChangesReason")
                                .HasMaxLength(32)
                                .HasColumnType("varchar(32)")
                                .HasColumnName("statuschangesreason");

                            b1.Property<int>("Code")
                                .HasColumnType("int")
                                .HasColumnName("statuscode");

                            b1.HasKey("OrderId");

                            b1.ToTable("order");

                            b1.WithOwner()
                                .HasForeignKey("OrderId")
                                .HasConstraintName("fk_order_order_id");
                        });

                    b.Navigation("Receiver")
                        .IsRequired();

                    b.Navigation("Status")
                        .IsRequired();
                });

            modelBuilder.Entity("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.OrderItem", b =>
                {
                    b.HasOne("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.Order", null)
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_orderitem_order_orderid");

                    b.OwnsOne("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.OrderItemProduct", "Product", b1 =>
                        {
                            b1.Property<long>("OrderItemId")
                                .HasColumnType("bigint")
                                .HasColumnName("id");

                            b1.Property<long>("Id")
                                .HasColumnType("bigint")
                                .HasColumnName("producid");

                            b1.Property<string>("Name")
                                .IsRequired()
                                .HasMaxLength(64)
                                .HasColumnType("varchar(64)")
                                .HasColumnName("productname");

                            b1.Property<decimal>("Price")
                                .HasColumnType("decimal(18,4)")
                                .HasColumnName("productprice");

                            b1.HasKey("OrderItemId");

                            b1.ToTable("orderitem");

                            b1.WithOwner()
                                .HasForeignKey("OrderItemId")
                                .HasConstraintName("fk_orderitem_orderitem_id");
                        });

                    b.Navigation("Product")
                        .IsRequired();
                });

            modelBuilder.Entity("Adnc.Demo.Ord.Domain.Aggregates.OrderAggregate.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
