version: '3.1'

services:
# consul
  consul_server_1:
    image: hashicorp/consul:latest
    container_name: "consul_server_1"
    restart: always
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_DATACENTER=adnc_dc
    networks:
      adnc_network_consul:
        ipv4_address: 172.25.0.1
    ports:
      - "8590:8500"
    volumes:
      - ./adnc/consul/server1/data:/consul/data
      - ./adnc/consul/server1/config:/consul/config
    privileged: true
    command: >
      agent
      -server
      -bootstrap-expect=3
      -ui
      -node=consul_server_1
      -client='0.0.0.0'
      -bind='172.25.0.1'
      -data-dir /consul/data
      -config-dir /consul/config
      -datacenter=adnc_dc

  consul_server_2:
    image: hashicorp/consul:latest
    container_name: "consul_server_2"
    restart: always
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_DATACENTER=adnc_dc
    networks:
      adnc_network_consul:
        ipv4_address: 172.25.0.2
    ports:
      - "8520:8500"
    volumes:
      - ./adnc/consul/server2/data:/consul/data
      - ./adnc/consul/server2/config:/consul/config
    privileged: true
    depends_on:
      - consul_server_1
    command: >
      agent
      -server
      -ui
      -node=consul_server_2
      -client='0.0.0.0'
      -bind='172.25.0.2'
      -datacenter=adnc_dc
      -data-dir /consul/data
      -config-dir /consul/config
      -join=172.25.0.1

  consul_server_3:
    image: hashicorp/consul:latest
    container_name: "consul_server_3"
    restart: always
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_DATACENTER=adnc_dc
    networks:
      adnc_network_consul:
        ipv4_address: 172.25.0.3
    ports:
      - "8530:8500"
    volumes:
      - ./adnc/consul/server3/data:/consul/data
      - ./adnc/consul/server3/config:/consul/config
    privileged: true
    depends_on:
      - consul_server_1
    command: >
      agent
      -server
      -ui
      -node=consul_server_3
      -client='0.0.0.0'
      -bind='172.25.0.3'
      -datacenter=adnc_dc
      -data-dir /consul/data
      -config-dir /consul/config
      -join=172.25.0.1

  consul_client_1:
    image: hashicorp/consul:latest
    container_name: "consul_client_1"
    restart: always
    environment:
      - CONSUL_BIND_INTERFACE=eth0
      - CONSUL_DATACENTER=adnc_dc
    networks:
      adnc_network_consul:
        ipv4_address: 172.25.0.4
    ports:
      - "8500:8500"
    volumes:
      - ./adnc/consul/client1/config:/consul/config
      - ./adnc-consul/consul-init.sh:/consul/consul-init.sh
      - ./adnc-consul/kv.json:/consul/kv.json
    privileged: true
    depends_on:
      - consul_server_1
    command: "/bin/sh /consul/consul-init.sh"
# consul end

# mariadb
  mariadb:
    image: mariadb:latest
    container_name: "adnc-mariadb"
    restart: always
    environment:
      MYSQL_USER: "root"
      MYSQL_PASSWORD: "alpha.netcore"
      MYSQL_ROOT_PASSWORD: "alpha.netcore"
      TZ: "Asia/Shanghai"
    ports:
      - "13308:3306"
    volumes:
      - ./adnc/mysql/data:/var/lib/mysql
      - ./adnc/mysql/log:/var/log/mysql
      - ./adnc-mysql/db_backups:/docker-entrypoint-initdb.d
    command: --init-file /docker-entrypoint-initdb.d/bootstrap.sql
# mariadb end

# mongodb
  mongodb:
    image: mongo:latest
    container_name: adnc-mongodb
    environment:
      # 时区上海
      TZ: Asia/Shanghai
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin
      MONGO_INITDB_DATABASE: logs_dev
      MONGO_USERNAME: alpha
      MONGO_PASSWORD: football
    restart: always
    volumes:
        - ./adnc/mongo/data:/data/db
        - ./adnc-mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh
    ports:
      - 13017:27017
    cpus: 2
    mem_reservation: "400M"
    mem_limit: "500M"
    command:
        - mongod
        - --wiredTigerCacheSizeGB=0.5
        - --auth   
# mongodb end

# redis
  redis:
    container_name: adnc-redis-rebloom
    image: redislabs/rebloom:latest
    ports:
      - "13379:6379"
    volumes:
      - ./adnc-redis/redis.conf:/etc/redis/redis.conf
      - ./adnc/redis/data:/data
    restart: always
    command: redis-server /etc/redis/redis.conf
# redis end

# loki
  loki:
    container_name: adnc-loki
    image: grafana/loki:latest
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - adnc_loki
    restart: always
  promtail:
    container_name: adnc-promtail
    image: grafana/promtail:latest
    volumes:
      - ./adnc/promtail/local/logs/:/var/log/
      - ./adnc-loki/promtail.yaml:/etc/promtail/docker-config.yaml
    command: -config.file=/etc/promtail/docker-config.yaml
    networks:
      - adnc_loki
    restart: always
  grafana:
    container_name: adnc-grafana
    image: grafana/grafana:latest
    restart: always
    ports:
      - "9010:3000"
    networks:
      - adnc_loki
# loki end

# rabbitmq
  rabbitmq:
    container_name: adnc-rabbitmq
    image: rabbitmq:4.0.7-management
    ports:
      - "5672:13572"
      - "15672:18578"
    environment:
      - RABBITMQ_DEFAULT_USER=admin 
      - RABBITMQ_DEFAULT_PASS=football
    restart: always
# rabbitmq end

# nginx
#   nginx:
#     image: nginx:latest
#     container_name: adnc-nginx
#     ports:
#       - "80:80"
#       - "443:443"
#       - "9079:9079"
#     volumes:
#       - ./cert/:/etc/nginx/cert/
#       - ./certbot/webroot/www/:/etc/nginx/certbot/
#       - ./conf/nginx.conf:/etc/nginx/nginx.conf
#     restart: always
#     networks:
#       - adnc_nginx
# nginx end

#自定义网络，自定义网络可以指定容器IP
networks:
  adnc_network_consul:
    driver: bridge
    ipam:
      config:
        - subnet: "172.25.0.0/16"
          gateway: "172.25.0.16"
  adnc_loki: #loki网络
  adnc_nginx: #nginx网络
